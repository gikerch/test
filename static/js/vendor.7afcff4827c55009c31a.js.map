{"version":3,"sources":["webpack:///static/js/vendor.7afcff4827c55009c31a.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/core-js/library/modules/_wks.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/echarts/lib/component/toolbox/featureManager.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_iterators.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/echarts/lib/component/dataZoom/helper.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///./~/babel-runtime/helpers/slicedToArray.js","webpack:///./~/babel-runtime/regenerator/index.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_iter-define.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_set-to-string-tag.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/core-js/library/modules/web.dom.iterable.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/history.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/babel-runtime/core-js/array/from.js","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/babel-runtime/core-js/is-iterable.js","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/helpers/toConsumableArray.js","webpack:///./~/core-js/library/fn/array/from.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/fn/is-iterable.js","webpack:///./~/core-js/library/fn/json/stringify.js","webpack:///./~/core-js/library/fn/object/assign.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_add-to-unscopables.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_create-property.js","webpack:///./~/core-js/library/modules/_html.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_is-array-iter.js","webpack:///./~/core-js/library/modules/_iter-call.js","webpack:///./~/core-js/library/modules/_iter-create.js","webpack:///./~/core-js/library/modules/_iter-detect.js","webpack:///./~/core-js/library/modules/_iter-step.js","webpack:///./~/core-js/library/modules/_library.js","webpack:///./~/core-js/library/modules/_object-assign.js","webpack:///./~/core-js/library/modules/_object-create.js","webpack:///./~/core-js/library/modules/_object-dps.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-gpo.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_redefine.js","webpack:///./~/core-js/library/modules/_string-at.js","webpack:///./~/core-js/library/modules/_to-absolute-index.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./~/core-js/library/modules/core.is-iterable.js","webpack:///./~/core-js/library/modules/es6.array.from.js","webpack:///./~/core-js/library/modules/es6.array.iterator.js","webpack:///./~/core-js/library/modules/es6.object.assign.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/component/dataZoomSelect.js","webpack:///./~/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/echarts/lib/component/helper/BrushController.js","webpack:///./~/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./~/echarts/lib/component/helper/interactionMutex.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/component/toolbox.js","webpack:///./~/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./~/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./~/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./~/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./~/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./~/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./~/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/regenerator-runtime/runtime-module.js","webpack:///./~/regenerator-runtime/runtime.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","__webpack_require__","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","ExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","round","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","abs","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","d","h","s","capitalFirst","substr","truncateText","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","normalize","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","store","uid","Symbol","USE_SYMBOL","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","getTextWidth","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textVerticalAlign","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","containerWidth","ellipsis","prepareTruncateOptions","truncateSingleLine","join","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","textBackgroundColor","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","fontSize","fontFamily","fontStyle","fontWeight","core","__e","features","ctor","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","default","staticRenderFns","_scopeId","computed","keys","__g","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","box","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","it","TypeError","dP","createDesc","object","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","defineProperty","anObject","IE8_DOM_DEFINE","toPrimitive","O","P","Attributes","collectAxesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","extent","getExtent","reverse","isBlank","getAxisPointerModel","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","undefined","hide","$export","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","virtual","U","bitmap","enumerable","configurable","writable","shared","IObject","defined","$at","iterated","_i","point","done","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","callback","nameObj","capital","eachAxisDim","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","mid","indexOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","completeDimensions","dimCount","retrieveValue","defaultNames","extraPrefix","guessOrdinal","excludes","includes","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","eval","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","createOrUpdateImage","__zrImageSrc","src","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textLineWidth","textStroke","getStroke","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textRotation","textOrigin","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","drawImage","blockHeiht","__currentValues","maxValue","lastIndexOf","center","middle","normalizeTextStyle","renderText","needDrawText","__webpack_exports__","isUndef","isDef","isTrue","isFalse","isPlainObject","_toString","isRegExp","isValidArrayIndex","JSON","toNumber","expectsLowerCase","fn","cache","boundFn","_length","toArray","to","_from","toObject","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","isReserved","def","bailRE","segments","handleError","err","vm","info","errorHandler","inBrowser","error","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","createTextVNode","VNode","cloneVNode","vnode","deep","cloned","tag","elm","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","prioritizePlainEvents","updateListeners","oldOn","remove$$1","cur","old","toAdd","hasModifier","event$1","capture","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","extractPropsFromVNodeData","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","__esModule","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","resolve","reject","reason","then","delay","setTimeout","timeout","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","slot","functionalContext","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","callHook","updateComponent","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","nextTick","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","methods","initMethods","_data","initComputed","watch","nativeWatch","initWatch","propsOptions","isRoot","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","evaluate","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","resolveInject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","transformModel","functional","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","initRender","renderContext","_c","$createElement","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isEdge","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","applyTranslation","oldPos","pos","moved","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","html","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","root","currentParent","preserveWhitespace","comments","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","cloneNode","innerHTML","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","isAndroid","isIOS","_isServer","_Set","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","subs","addSub","removeSub","addDep","arrayMethods","observeArray","arrayKeys","getOwnPropertyNames","walk","items","raw","prototypeAccessors","defineProperties","uid$2","expOrFn","user","active","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_rendered","_o","_n","_s","_l","_q","_m","_f","_k","_b","_v","_e","_u","_g","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","defineReactive","delete","ssrContext","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","vmodel","model$1","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","content","encoded","regexEscapeRE","open","klass$1","style$1","modules$1","directives$1","baseOptions","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","esc","tab","space","up","down","genGuard","prevent","ctrl","alt","meta","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","documentElement","_interopRequireDefault","_isIterable2","_isIterable3","_getIterator2","_getIterator3","sliceIterator","_arr","_d","cof","TAG","ARG","tryGet","callee","aFunction","that","propertyIsEnumerable","LIBRARY","redefine","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","returnThis","Base","NAME","Constructor","DEFAULT","IS_SET","FORCED","IteratorPrototype","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","$keys","enumBugKeys","stat","toInteger","px","classof","getIteratorMethod","TO_STRING_TAG","DOMIterables","Collection","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","getTooltipPosition","dataToPoint","coordDimToDataDim","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","AxisProxy","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","coordIndex","coordSysLists","getCoordSysModel","giveStore","ATTR","history","newSnapshot","dataZoomId","percentRange","head","snapshot","classUtil","getColorFromPalette","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","toggleHighlight","dataIdx","highlight","downplay","chartProto","Component","componentProto","guid","Transformable","Animatable","clipPath","drift","decomposeTransform","afterUpdate","updateTransform","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","angle","LinkedList","tail","linkedListProto","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","ZImage","_image","sWidth","sHeight","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","opacity","textTag","transformText","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","r1","r2","r3","r4","total","_from2","arr2","$JSON","assign","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","$defineProperty","ArrayProto","iterator","descriptor","SAFE_CLOSING","riter","skipClosing","safe","iter","getKeys","gOPS","pIE","$assign","aLen","getSymbols","isEnum","dPs","IE_PROTO","Empty","createDict","iframeDocument","iframe","contentWindow","write","Properties","getOwnPropertySymbols","ObjectProto","arrayIndexOf","TO_STRING","valueOf","getIterator","iterFn","isIterable","isArrayIter","createProperty","getIterFn","arrayLike","mapfn","mapping","addToUnscopables","Arguments","chartInstance","echartsAPIList","actionInfos","isSelected","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","getDimensionsInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","dataSelectableMixin","PieSeries","legendDataProvider","getRawData","updateSelectedMap","_defaultLabelLine","getInitialData","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","avoidLabelOverlap","stillShowZeroSum","itemStyle","borderWidth","animationType","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","updateData","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","itemStyleModel","visualColor","lineJoin","getItemStyle","_updateLabel","labelText","labelLayout","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen","labelLineLen2","labelRotate","RADIAN","eachSeriesByType","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","axisPointerModelHelper","axisTrigger","axisPointer","link","tooltipOption","highDownKey","AxisPointerModel","triggerOn","shadowStyle","borderColor","handle","icon","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","axisExtent","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getCartesian","grid","getAxisDimIndex","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerShapeBuilder","labelInside","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","registerAxisPointerClass","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","pointToData","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","dataDim","getAxisTooltipData","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisDim","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","axisName","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","labelStr","textEl","targetType","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","axisRotation","rawTick","updateAxisPointer","axisView","getAxisPointerClass","axisPointerClass","_axisPointer","disposeAxisPointer","axisPointerClazz","gridModel","getZero","theAxis","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posMap","dirMap","getLabelInterval","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setRange","_dimName","_axisIndex","_dataExtent","_dataZoomModel","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","restore","filterData","isInWindow","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","valueRange","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","panels","panel","pn","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","panelRect","xmin","ymin","resetCursor","inCover","setCursorStyle","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","__brushPanelId","getCreatingRange","__defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","brushWidth","ne","sw","nw","se","enableBrush","setPanels","panelOpts","oldPanels","newPanels","panelOpt","defaultBrushType","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","lineX","lineY","polygon","BrushTargetManager","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","minMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","coordToData","toLocalCoord","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","getStore","resourceKey","userKey","isTaken","positionGroup","getBoxLayoutParams","addBackground","targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","itemGap","showTitle","iconStyle","isUserFeatureName","listComponentHelper","toolboxModel","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","title","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","groupSeries","seriesGroupByCategoryAxis","otherSeries","eachRawSeries","baseAxis","getBaseAxis","categoryAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","BLOCK_SPLITER","assembleOtherSeries","getContentFromModel","isTSVFormat","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","readOnly","optionToContent","contentToOption","lang","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","which","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","getSeriesByName","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","DATA_ZOOM_ID_BASE","zoom","back","nextActive","_dispatchZoomAction","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","dataZoom","toolboxOpt","toolbox","MagicType","bar","tiled","availableIcons","seriesOptGenreator","markPoint","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","getAxesByScale","radio","currentType","Restore","SaveAsImage","$a","download","href","MouseEvent","evt","bubbles","cancelable","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","domStyle","setContent","setEnterable","enterable","viewportRoot","getViewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","fixExtentWithBands","nTick","normalizedExtent","onBand","alignWithLabel","bands","getBands","coords","getLabelsCoords","rangeStart","rangeEnd","resetRange","symbolUtil","axisModelCommonMixin","createList","createSymbol","createScale","mixinAxisModelCommonMethods","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","colorPaletteMixin","visualColorAccessPath","fillDataTextStyle","newSeriesOption","getLinkedData","coordDim","dataDimToCoordDim","multipleSeries","formattedValue","valStr","colorEl","animationEnabled","platform","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","mpData","mlData","legendModels","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","symbolType","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolPath","setColor","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","encodeColor","colorAccessPath","hadRuntime","regeneratorRuntime","oldRuntime","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","invoke","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","GenStateSuspendedYield","return","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","iteratorSymbol","Op","$Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","getProto","NativeIteratorPrototype","Gp","displayName","isGeneratorFunction","genFun","mark","setPrototypeOf","awrap","async","skipTempReset","rootEntry","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","isError","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","parts","stringifyQuery","val2","createRoute","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","findAnchor","installed","_Vue","registerInstance","callVal","registerRouteInstance","beforeCreate","_routerRoot","_router","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","modifier","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","pathToRegexpOptions","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","_key","pushState","replaceState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","flatten","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","forward","getMatchedComponents","normalizedTo","parentId","newStyles","sourceMap","part","makeEventPacket","eveType","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","painterRoot","_hovered","_lastTouchMoment","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","eventArgs","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","atan2","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","textHelper","shadowTemp","orignalBrush","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","cp0","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","polyHelper","fixClipWithShadow","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","sources","btoa","unescape","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.7afcff4827c55009c31a.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(5);\n\n    var GlobalModel = __webpack_require__(196);\n    var ExtensionAPI = __webpack_require__(151);\n    var CoordinateSystemManager = __webpack_require__(78);\n    var OptionManager = __webpack_require__(197);\n\n    var ComponentModel = __webpack_require__(25);\n    var SeriesModel = __webpack_require__(198);\n\n    var ComponentView = __webpack_require__(89);\n    var ChartView = __webpack_require__(88);\n    var graphic = __webpack_require__(4);\n    var modelUtil = __webpack_require__(2);\n    var throttle = __webpack_require__(87);\n\n    var zrender = __webpack_require__(276);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(26);\n    var Eventful = __webpack_require__(22);\n    var timsort = __webpack_require__(56);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(213));\n    echarts.registerPreprocessor(__webpack_require__(205));\n    echarts.registerLoading('default', __webpack_require__(195));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(50);\n    echarts.Model = __webpack_require__(9);\n\n    echarts.Axis = __webpack_require__(192);\n\n    echarts.graphic = __webpack_require__(4);\n    echarts.number = __webpack_require__(3);\n    echarts.format = __webpack_require__(6);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(21);\n    echarts.vector = __webpack_require__(7);\n    echarts.color = __webpack_require__(26);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(194);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(6);\n    var nubmerUtil = __webpack_require__(3);\n    var Model = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(274);\n    var round = Math.round;\n    var Path = __webpack_require__(8);\n    var colorTool = __webpack_require__(26);\n    var matrix = __webpack_require__(21);\n    var vector = __webpack_require__(7);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(36);\n\n    graphic.Image = __webpack_require__(97);\n\n    graphic.Text = __webpack_require__(257);\n\n    graphic.Circle = __webpack_require__(264);\n\n    graphic.Sector = __webpack_require__(270);\n\n    graphic.Ring = __webpack_require__(269);\n\n    graphic.Polygon = __webpack_require__(266);\n\n    graphic.Polyline = __webpack_require__(267);\n\n    graphic.Rect = __webpack_require__(268);\n\n    graphic.Line = __webpack_require__(265);\n\n    graphic.BezierCurve = __webpack_require__(263);\n\n    graphic.Arc = __webpack_require__(262);\n\n    graphic.CompoundPath = __webpack_require__(254);\n\n    graphic.LinearGradient = __webpack_require__(255);\n\n    graphic.RadialGradient = __webpack_require__(256);\n\n    graphic.BoundingRect = __webpack_require__(10);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var textContain = __webpack_require__(13);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(57);\n    var zrUtil = __webpack_require__(0);\n    var PathProxy = __webpack_require__(37);\n    var pathContain = __webpack_require__(248);\n\n    var Pattern = __webpack_require__(98);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(12);\n    var env = __webpack_require__(5);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(203));\n    mixin(Model, __webpack_require__(200));\n    mixin(Model, __webpack_require__(204));\n    mixin(Model, __webpack_require__(202));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(7);\n    var matrix = __webpack_require__(21);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar store = __webpack_require__(73)('wks');\nvar uid = __webpack_require__(75);\nvar Symbol = __webpack_require__(17).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(10);\n    var imageHelper = __webpack_require__(59);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports = {};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(7);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(22);\n    var env = __webpack_require__(5);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(41);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(30);\nvar createDesc = __webpack_require__(42);\nmodule.exports = __webpack_require__(28) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(54);\n    var clazzUtil = __webpack_require__(12);\n    var layout = __webpack_require__(34);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(201));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(94);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 27 */,\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(40)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(23);\nvar IE8_DOM_DEFINE = __webpack_require__(128);\nvar toPrimitive = __webpack_require__(145);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(28) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(9);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(209);\n    var IntervalScale = __webpack_require__(53);\n    __webpack_require__(210);\n    __webpack_require__(208);\n    var Scale = __webpack_require__(33);\n\n    var numberUtil = __webpack_require__(3);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(13);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(12);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(10);\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(6);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Element = __webpack_require__(90);\n    var BoundingRect = __webpack_require__(10);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(19);\n    var vec2 = __webpack_require__(7);\n    var bbox = __webpack_require__(252);\n    var BoundingRect = __webpack_require__(10);\n    var dpr = __webpack_require__(35).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(17);\nvar core = __webpack_require__(14);\nvar ctx = __webpack_require__(66);\nvar hide = __webpack_require__(24);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar shared = __webpack_require__(73)('keys');\nvar uid = __webpack_require__(75);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(69);\nvar defined = __webpack_require__(38);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(38);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $at = __webpack_require__(143)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(70)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(6);\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(9);\n    var DataDiffer = __webpack_require__(49);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(55)))\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(6);\n    var Scale = __webpack_require__(33);\n    var helper = __webpack_require__(86);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(12);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Style = __webpack_require__(99);\n\n    var Element = __webpack_require__(90);\n    var RectText = __webpack_require__(261);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(94);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(13);\n    var util = __webpack_require__(0);\n    var roundRectHelper = __webpack_require__(101);\n    var imageHelper = __webpack_require__(59);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (!isIE && typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  var plain = !(passive || once$$1 || capture);\n  return {\n    name: name,\n    plain: plain,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\n// #6552\nfunction prioritizePlainEvents (a, b) {\n  return a.plain ? -1 : b.plain ? 1 : 0\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  var toAdd = [];\n  var hasModifier = false;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!event.plain) { hasModifier = true; }\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      event.handler = cur;\n      toAdd.push(event);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  if (toAdd.length) {\n    if (hasModifier) { toAdd.sort(prioritizePlainEvents); }\n    for (var i = 0; i < toAdd.length; i++) {\n      var event$1 = toAdd[i];\n      add(event$1.name, event$1.handler, event$1.once, event$1.capture, event$1.passive);\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"production\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"production\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"production\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (false) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || emptyObject,\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      addAttr(el, 'slot', slotTarget);\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(55)))\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _isIterable2 = __webpack_require__(114);\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = __webpack_require__(113);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(221);\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(65);\nvar TAG = __webpack_require__(11)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(123);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(41);\nvar document = __webpack_require__(17).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(65);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar LIBRARY = __webpack_require__(134);\nvar $export = __webpack_require__(39);\nvar redefine = __webpack_require__(142);\nvar hide = __webpack_require__(24);\nvar has = __webpack_require__(29);\nvar Iterators = __webpack_require__(18);\nvar $iterCreate = __webpack_require__(131);\nvar setToStringTag = __webpack_require__(72);\nvar getPrototypeOf = __webpack_require__(139);\nvar ITERATOR = __webpack_require__(11)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(140);\nvar enumBugKeys = __webpack_require__(68);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar def = __webpack_require__(30).f;\nvar has = __webpack_require__(29);\nvar TAG = __webpack_require__(11)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global = __webpack_require__(17);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.15 ToLength\nvar toInteger = __webpack_require__(44);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(64);\nvar ITERATOR = __webpack_require__(11)('iterator');\nvar Iterators = __webpack_require__(18);\nmodule.exports = __webpack_require__(14).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(149);\nvar global = __webpack_require__(17);\nvar hide = __webpack_require__(24);\nvar Iterators = __webpack_require__(18);\nvar TO_STRING_TAG = __webpack_require__(11)('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(2).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(4);\n    var textContain = __webpack_require__(13);\n    var formatUtil = __webpack_require__(6);\n    var matrix = __webpack_require__(21);\n    var axisHelper = __webpack_require__(32);\n    var AxisBuilder = __webpack_require__(165);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var env = __webpack_require__(5);\n    var echarts = __webpack_require__(1);\n    var modelUtil = __webpack_require__(2);\n    var helper = __webpack_require__(48);\n    var AxisProxy = __webpack_require__(169);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(89);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(12);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(3);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(36);\n    var componentUtil = __webpack_require__(54);\n    var clazzUtil = __webpack_require__(12);\n    var modelUtil = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(36);\n    var componentUtil = __webpack_require__(54);\n    var clazzUtil = __webpack_require__(12);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(95);\n    var Eventful = __webpack_require__(22);\n    var Transformable = __webpack_require__(273);\n    var Animatable = __webpack_require__(271);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(243);\n    var color = __webpack_require__(26);\n    var util = __webpack_require__(0);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(35);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(57);\n    var BoundingRect = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n    var imageHelper = __webpack_require__(59);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = __webpack_require__(60);\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(260);\n    var smoothBezier = __webpack_require__(259);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(118), __esModule: true };\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(119), __esModule: true };\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(120), __esModule: true };\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(121), __esModule: true };\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(122), __esModule: true };\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__(112);\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(47);\n__webpack_require__(148);\nmodule.exports = __webpack_require__(14).Array.from;\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(77);\n__webpack_require__(47);\nmodule.exports = __webpack_require__(146);\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(77);\n__webpack_require__(47);\nmodule.exports = __webpack_require__(147);\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar core = __webpack_require__(14);\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(150);\nmodule.exports = __webpack_require__(14).Object.assign;\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports) {\n\nmodule.exports = function () { /* empty */ };\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(45);\nvar toLength = __webpack_require__(74);\nvar toAbsoluteIndex = __webpack_require__(144);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $defineProperty = __webpack_require__(30);\nvar createDesc = __webpack_require__(42);\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar document = __webpack_require__(17).document;\nmodule.exports = document && document.documentElement;\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(28) && !__webpack_require__(40)(function () {\n  return Object.defineProperty(__webpack_require__(67)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// check on default Array iterator\nvar Iterators = __webpack_require__(18);\nvar ITERATOR = __webpack_require__(11)('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(23);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar create = __webpack_require__(136);\nvar descriptor = __webpack_require__(42);\nvar setToStringTag = __webpack_require__(72);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(24)(IteratorPrototype, __webpack_require__(11)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ITERATOR = __webpack_require__(11)('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports) {\n\nmodule.exports = true;\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = __webpack_require__(71);\nvar gOPS = __webpack_require__(138);\nvar pIE = __webpack_require__(141);\nvar toObject = __webpack_require__(46);\nvar IObject = __webpack_require__(69);\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(40)(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(23);\nvar dPs = __webpack_require__(137);\nvar enumBugKeys = __webpack_require__(68);\nvar IE_PROTO = __webpack_require__(43)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(67)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(127).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP = __webpack_require__(30);\nvar anObject = __webpack_require__(23);\nvar getKeys = __webpack_require__(71);\n\nmodule.exports = __webpack_require__(28) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports) {\n\nexports.f = Object.getOwnPropertySymbols;\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(29);\nvar toObject = __webpack_require__(46);\nvar IE_PROTO = __webpack_require__(43)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar has = __webpack_require__(29);\nvar toIObject = __webpack_require__(45);\nvar arrayIndexOf = __webpack_require__(125)(false);\nvar IE_PROTO = __webpack_require__(43)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports) {\n\nexports.f = {}.propertyIsEnumerable;\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(24);\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(44);\nvar defined = __webpack_require__(38);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toInteger = __webpack_require__(44);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(41);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(23);\nvar get = __webpack_require__(76);\nmodule.exports = __webpack_require__(14).getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof = __webpack_require__(64);\nvar ITERATOR = __webpack_require__(11)('iterator');\nvar Iterators = __webpack_require__(18);\nmodule.exports = __webpack_require__(14).isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ctx = __webpack_require__(66);\nvar $export = __webpack_require__(39);\nvar toObject = __webpack_require__(46);\nvar call = __webpack_require__(130);\nvar isArrayIter = __webpack_require__(129);\nvar toLength = __webpack_require__(74);\nvar createProperty = __webpack_require__(126);\nvar getIterFn = __webpack_require__(76);\n\n$export($export.S + $export.F * !__webpack_require__(132)(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar addToUnscopables = __webpack_require__(124);\nvar step = __webpack_require__(133);\nvar Iterators = __webpack_require__(18);\nvar toIObject = __webpack_require__(45);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(70)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(39);\n\n$export($export.S + $export.F, 'Object', { assign: __webpack_require__(135) });\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(1);\n    var zrUtil = __webpack_require__(0);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(50);\n    var completeDimensions = __webpack_require__(51);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var CoordinateSystem = __webpack_require__(78);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(1);\n\n    __webpack_require__(155);\n    __webpack_require__(156);\n\n    __webpack_require__(152)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(212), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(158), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(207), 'pie'));\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(50);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var completeDimensions = __webpack_require__(51);\n\n    var dataSelectableMixin = __webpack_require__(179);\n\n    var PieSeries = __webpack_require__(1).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(4);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(88).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(13);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO minAngle\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(157);\n    var zrUtil = __webpack_require__(0);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(1);\n    var axisPointerModelHelper = __webpack_require__(31);\n    var axisTrigger = __webpack_require__(164);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(160);\n    __webpack_require__(161);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(163);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(1);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(80);\n\n    var AxisPonterView = __webpack_require__(1).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(12);\n    var graphic = __webpack_require__(4);\n    var get = __webpack_require__(2).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(31);\n    var eventTool = __webpack_require__(20);\n    var throttle = __webpack_require__(87);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(4);\n    var BaseAxisPointer = __webpack_require__(162);\n    var viewHelper = __webpack_require__(81);\n    var cartesianAxisHelper = __webpack_require__(167);\n    var AxisView = __webpack_require__(166);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var modelHelper = __webpack_require__(31);\n    var findPointFromSeries = __webpack_require__(79);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(6);\n    var graphic = __webpack_require__(4);\n    var Model = __webpack_require__(9);\n    var numberUtil = __webpack_require__(3);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(7);\n    var matrix = __webpack_require__(21);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(31);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(1).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(174);\n\n    __webpack_require__(82);\n    __webpack_require__(83);\n\n    __webpack_require__(170);\n    __webpack_require__(171);\n\n    __webpack_require__(173);\n    __webpack_require__(172);\n\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var helper = __webpack_require__(48);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(82);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(83).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var helper = __webpack_require__(48);\n    var echarts = __webpack_require__(1);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(1);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(25).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(22);\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(10);\n    var graphic = __webpack_require__(4);\n    var interactionMutex = __webpack_require__(177);\n    var DataDiffer = __webpack_require__(49);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(4);\n    var modelUtil = __webpack_require__(2);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(1).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(34);\n    var formatUtil = __webpack_require__(6);\n    var graphic = __webpack_require__(4);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(181);\n    __webpack_require__(182);\n\n    __webpack_require__(187);\n    __webpack_require__(185);\n    __webpack_require__(183);\n    __webpack_require__(184);\n    __webpack_require__(186);\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(15);\n    var zrUtil = __webpack_require__(0);\n\n    var ToolboxModel = __webpack_require__(1).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(15);\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(4);\n    var Model = __webpack_require__(9);\n    var DataDiffer = __webpack_require__(49);\n    var listComponentHelper = __webpack_require__(178);\n    var textContain = __webpack_require__(13);\n\n    module.exports = __webpack_require__(1).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var eventTool = __webpack_require__(20);\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(15).register('dataView', DataView);\n\n    __webpack_require__(1).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var BrushController = __webpack_require__(175);\n    var BrushTargetManager = __webpack_require__(176);\n    var history = __webpack_require__(84);\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(168);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(15).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(1).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(1);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(15).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(84);\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(15).register('restore', Restore);\n\n\n    __webpack_require__(1).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(5);\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    __webpack_require__(15).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(159);\n\n    __webpack_require__(190);\n\n    __webpack_require__(191);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(1).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(1).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(26);\n    var eventUtil = __webpack_require__(20);\n    var formatUtil = __webpack_require__(6);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(5);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(189);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(6);\n    var numberUtil = __webpack_require__(3);\n    var findPointFromSeries = __webpack_require__(79);\n    var layoutUtil = __webpack_require__(34);\n    var env = __webpack_require__(5);\n    var Model = __webpack_require__(9);\n    var globalListener = __webpack_require__(80);\n    var axisHelper = __webpack_require__(32);\n    var axisPointerViewHelper = __webpack_require__(81);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    __webpack_require__(1).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(3);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(32);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(153);\n    var symbolUtil = __webpack_require__(211);\n    var axisHelper = __webpack_require__(32);\n    var axisModelCommonMixin = __webpack_require__(193);\n    var Model = __webpack_require__(9);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(51),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(4);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var Model = __webpack_require__(9);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(25);\n\n    var globalDefault = __webpack_require__(199);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(85));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(2);\n    var ComponentModel = __webpack_require__(25);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(6);\n    var classUtil = __webpack_require__(12);\n    var modelUtil = __webpack_require__(2);\n    var ComponentModel = __webpack_require__(25);\n    var colorPaletteMixin = __webpack_require__(85);\n    var env = __webpack_require__(5);\n    var layout = __webpack_require__(34);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(52)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(52)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(52)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(13);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(206);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(33);\n    var numberUtil = __webpack_require__(3);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(53);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(33);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(3);\n    var formatUtil = __webpack_require__(6);\n    var scaleHelper = __webpack_require__(86);\n\n    var IntervalScale = __webpack_require__(53);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(4);\n    var BoundingRect = __webpack_require__(10);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(58);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(222);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports) {\n\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n/***/ }),\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */,\n/* 229 */,\n/* 230 */,\n/* 231 */,\n/* 232 */,\n/* 233 */,\n/* 234 */,\n/* 235 */,\n/* 236 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(0);\n    var Draggable = __webpack_require__(272);\n\n    var Eventful = __webpack_require__(22);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(0);\n    var config = __webpack_require__(35);\n    var Style = __webpack_require__(99);\n    var Pattern = __webpack_require__(98);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(35);\n    var util = __webpack_require__(0);\n    var log = __webpack_require__(96);\n    var BoundingRect = __webpack_require__(10);\n    var timsort = __webpack_require__(56);\n\n    var Layer = __webpack_require__(239);\n\n    var requestAnimationFrame = __webpack_require__(92);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(97);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(0);\n    var env = __webpack_require__(5);\n\n    var Group = __webpack_require__(36);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(56);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(0);\n    var Dispatcher = __webpack_require__(20).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(92);\n\n    var Animator = __webpack_require__(91);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(244);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(93).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(19);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(37).CMD;\n    var line = __webpack_require__(247);\n    var cubic = __webpack_require__(246);\n    var quadratic = __webpack_require__(249);\n    var arc = __webpack_require__(245);\n    var normalizeRadian = __webpack_require__(93).normalizeRadian;\n    var curve = __webpack_require__(19);\n\n    var windingLine = __webpack_require__(250);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(19);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(20);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(7);\n    var curve = __webpack_require__(19);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(20);\n    var zrUtil = __webpack_require__(0);\n    var Eventful = __webpack_require__(22);\n    var env = __webpack_require__(5);\n    var GestureMgr = __webpack_require__(251);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(8);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(58);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var Gradient = __webpack_require__(58);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(57);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(13);\n    var textHelper = __webpack_require__(60);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(5);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(7);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(7);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(60);\n    var BoundingRect = __webpack_require__(10);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(19);\n    var vec2 = __webpack_require__(7);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(100);\n\n    module.exports = __webpack_require__(8).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(100);\n\n    module.exports = __webpack_require__(8).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(101);\n\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(8).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(8);\n    var fixClipWithShadow = __webpack_require__(258);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(91);\n    var util = __webpack_require__(0);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(96);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(21);\n    var vector = __webpack_require__(7);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(8);\n    var PathProxy = __webpack_require__(37);\n    var transformPath = __webpack_require__(275);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(37).CMD;\n    var vec2 = __webpack_require__(7);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(95);\n    var env = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n\n    var Handler = __webpack_require__(238);\n    var Storage = __webpack_require__(241);\n    var Animation = __webpack_require__(242);\n    var HandlerProxy = __webpack_require__(253);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(240)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(237)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.7afcff4827c55009c31a.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 0\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 1\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 2\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 3\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 4\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 5\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 6\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 7\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 8\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 9\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 10\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_wks.js\n// module id = 11\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 12\n// module chunks = 0","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 13\n// module chunks = 0","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 14\n// module chunks = 0","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/featureManager.js\n// module id = 15\n// module chunks = 0","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 16\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 17\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iterators.js\n// module id = 18\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 19\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 20\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 21\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 22\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 23\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 24\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 25\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 26\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 28\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 29\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 30\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 31\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 32\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 33\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 34\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 35\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 36\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 37\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 38\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 39\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 40\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 41\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 42\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 43\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 44\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 45\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 46\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.string.iterator.js\n// module id = 47\n// module chunks = 0","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/helper.js\n// module id = 48\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 49\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 50\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 51\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 52\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 53\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 54\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 55\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 56\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 57\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 58\n// module chunks = 0","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 59\n// module chunks = 0","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 60\n// module chunks = 0","/*!\n * Vue.js v2.4.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (!isIE && typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  var plain = !(passive || once$$1 || capture);\n  return {\n    name: name,\n    plain: plain,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\n// #6552\nfunction prioritizePlainEvents (a, b) {\n  return a.plain ? -1 : b.plain ? 1 : 0\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  var toAdd = [];\n  var hasModifier = false;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!event.plain) { hasModifier = true; }\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      event.handler = cur;\n      toAdd.push(event);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  if (toAdd.length) {\n    if (hasModifier) { toAdd.sort(prioritizePlainEvents); }\n    for (var i = 0; i < toAdd.length; i++) {\n      var event$1 = toAdd[i];\n      add(event$1.name, event$1.handler, event$1.once, event$1.capture, event$1.passive);\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (process.env.NODE_ENV !== 'production' && !source) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || emptyObject,\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      addAttr(el, 'slot', slotTarget);\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 61\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/slicedToArray.js\n// module id = 62\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/regenerator/index.js\n// module id = 63\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 64\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 65\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 66\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 67\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 68\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 69\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-define.js\n// module id = 70\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 71\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_set-to-string-tag.js\n// module id = 72\n// module chunks = 0","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 73\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 74\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 75\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 76\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/web.dom.iterable.js\n// module id = 77\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 78\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 79\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 80\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 81\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 82\n// module chunks = 0","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 83\n// module chunks = 0","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/history.js\n// module id = 84\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 85\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 86\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 87\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 88\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 89\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 90\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 91\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 92\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 93\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 94\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 95\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 96\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 97\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 98\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = require('./helper/text');\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 99\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 100\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 101\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/array/from.js\n// module id = 112\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 113\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/is-iterable.js\n// module id = 114\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/json/stringify.js\n// module id = 115\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 116\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/toConsumableArray.js\n// module id = 117\n// module chunks = 0","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/array/from.js\n// module id = 118\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 119\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/is-iterable.js\n// module id = 120\n// module chunks = 0","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/json/stringify.js\n// module id = 121\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/assign.js\n// module id = 122\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 123\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_add-to-unscopables.js\n// module id = 124\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 125\n// module chunks = 0","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_create-property.js\n// module id = 126\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_html.js\n// module id = 127\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 128\n// module chunks = 0","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-array-iter.js\n// module id = 129\n// module chunks = 0","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-call.js\n// module id = 130\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-create.js\n// module id = 131\n// module chunks = 0","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-detect.js\n// module id = 132\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iter-step.js\n// module id = 133\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_library.js\n// module id = 134\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-assign.js\n// module id = 135\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-create.js\n// module id = 136\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dps.js\n// module id = 137\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 138\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gpo.js\n// module id = 139\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 140\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 141\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_redefine.js\n// module id = 142\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_string-at.js\n// module id = 143\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-absolute-index.js\n// module id = 144\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 145\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 146\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.is-iterable.js\n// module id = 147\n// module chunks = 0","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.from.js\n// module id = 148\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.array.iterator.js\n// module id = 149\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.assign.js\n// module id = 150\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 151\n// module chunks = 0","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 152\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 153\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 154\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 155\n// module chunks = 0","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 156\n// module chunks = 0","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 157\n// module chunks = 0","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 158\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 159\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 160\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 161\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 162\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 163\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 164\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 165\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 166\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 167\n// module chunks = 0","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoomSelect.js\n// module id = 168\n// module chunks = 0","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 169\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 170\n// module chunks = 0","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 171\n// module chunks = 0","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 172\n// module chunks = 0","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 173\n// module chunks = 0","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 174\n// module chunks = 0","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushController.js\n// module id = 175\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 176\n// module chunks = 0","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 177\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 178\n// module chunks = 0","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 179\n// module chunks = 0","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox.js\n// module id = 180\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 181\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 182\n// module chunks = 0","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 183\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 184\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 185\n// module chunks = 0","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 186\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 187\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 188\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 189\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 190\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 191\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 192\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 193\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 194\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 195\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 196\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 197\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 198\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 199\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 200\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 201\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 202\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 203\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 204\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 205\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 206\n// module chunks = 0","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 207\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 208\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 209\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 210\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 211\n// module chunks = 0","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 212\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 213\n// module chunks = 0","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime-module.js\n// module id = 221\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 222\n// module chunks = 0","/**\n  * vue-router v2.7.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (resolvedDef.__esModule && resolvedDef.default) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.7.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = 236\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 237\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 238\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 239\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 240\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 241\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 242\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 243\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 244\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 245\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 246\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 247\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 248\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 249\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 250\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 251\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 252\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 253\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 254\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 255\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 256\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 257\n// module chunks = 0","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 258\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 259\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 260\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 261\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 262\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 263\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 264\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 265\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 266\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 267\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 268\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 269\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 270\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 271\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 272\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 273\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 274\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 275\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.1';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 276\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 277\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 278\n// module chunks = 0"],"sourceRoot":""}